{"version":3,"sources":["../src/event-handler.ts"],"sourcesContent":["const EventEmitter = require(\"node:events\");\n\nconst eventEmitter = new EventEmitter();\n\ninterface mapper {\n  [key: string]: number;\n}\n\ninterface arrayMapper {\n  [key: string]: number[];\n}\n\nlet startTime = 0;\nlet errorCount = 0;\nlet successCount = 0;\nlet avreageRunTimeDuration: mapper = {};\nlet avreageRunTimeCounter: mapper = {};\nlet runTimeArray: arrayMapper = {};\n\nconst formatMemoryUsage = (data: number) => `${Math.round(data / 1024 / 1024 * 100) / 100} MB`;\n\nconst memoryData = process.memoryUsage();\n\nconst memoryUsage = {\n  rss: `${formatMemoryUsage(memoryData.rss)} -> Resident Set Size - total memory allocated for the process execution`,\n  heapTotal: `${formatMemoryUsage(memoryData.heapTotal)} -> total size of the allocated heap`,\n  heapUsed: `${formatMemoryUsage(memoryData.heapUsed)} -> actual memory used during the execution`,\n  external: `${formatMemoryUsage(memoryData.external)} -> V8 external memory`\n};\n\neventEmitter.on(\"start\", () => {\n  startTime = Date.now();\n  console.log(`started benchmark.. ${startTime}`);\n});\neventEmitter.on(\"error\", () => {\n  errorCount++;\n});\neventEmitter.on(\"success\", (data: { type: string; time: number }) => {\n  const { type, time } = data;\n  avreageRunTimeDuration[type] = avreageRunTimeDuration[type] ? avreageRunTimeDuration[type] + time : time;\n  avreageRunTimeCounter[type] = avreageRunTimeCounter[type] ? avreageRunTimeCounter[type] + 1 : 1;\n  if (runTimeArray[type]) {\n    runTimeArray[type].push(time);\n  } else\n    runTimeArray[type] = [time];\n  successCount++;\n\n});\neventEmitter.on(\"end\", () => {\n  console.log(`finish benchmark total time: ${Date.now() - startTime}`);\n  process.exit(0);\n});\n\neventEmitter.on(\"log\", () => {\n  console.log(\"--------------------------------- \\n\");\n  console.log(`total error count: ${errorCount}`);\n  console.log(`total success count: ${successCount}`);\n  console.log(`average query run time: `);\n  Object.keys(avreageRunTimeDuration).forEach((key) => {\n      console.log(`${key}: ${avreageRunTimeDuration[key] / avreageRunTimeCounter[key]}`);\n    }\n  );\n  Object.keys(memoryUsage).forEach((key) => {\n    console.log(`${key}: ${memoryUsage[key]}`);\n  });\n  console.log(\"--------------------------------- \\n\");\n});\n\neventEmitter.on(\"clear_warmup\", () => {\n  errorCount = 0;\n  successCount = 0;\n  avreageRunTimeDuration = {};\n  avreageRunTimeCounter = {};\n  runTimeArray = {};\n  console.log(\"clearing warmup data to remove connection lags...\");\n  console.log(\"clearing warmup data to remove connection lags...\");\n\n});\n\nexport {\n  eventEmitter\n};"],"names":["eventEmitter","EventEmitter","require","startTime","errorCount","successCount","avreageRunTimeDuration","avreageRunTimeCounter","runTimeArray","formatMemoryUsage","data","Math","round","memoryData","process","memoryUsage","rss","heapTotal","heapUsed","external","on","Date","now","console","log","type","time","push","exit","Object","keys","forEach","key"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAgFEA;;;eAAAA;;;AAhFF,MAAMC,eAAeC,QAAQ;AAE7B,MAAMF,eAAe,IAAIC;AAUzB,IAAIE,YAAY;AAChB,IAAIC,aAAa;AACjB,IAAIC,eAAe;AACnB,IAAIC,yBAAiC,CAAC;AACtC,IAAIC,wBAAgC,CAAC;AACrC,IAAIC,eAA4B,CAAC;AAEjC,MAAMC,oBAAoB,CAACC,OAAiB,CAAC,EAAEC,KAAKC,KAAK,CAACF,OAAO,OAAO,OAAO,OAAO,IAAI,GAAG,CAAC;AAE9F,MAAMG,aAAaC,QAAQC,WAAW;AAEtC,MAAMA,cAAc;IAClBC,KAAK,CAAC,EAAEP,kBAAkBI,WAAWG,GAAG,EAAE,wEAAwE,CAAC;IACnHC,WAAW,CAAC,EAAER,kBAAkBI,WAAWI,SAAS,EAAE,oCAAoC,CAAC;IAC3FC,UAAU,CAAC,EAAET,kBAAkBI,WAAWK,QAAQ,EAAE,2CAA2C,CAAC;IAChGC,UAAU,CAAC,EAAEV,kBAAkBI,WAAWM,QAAQ,EAAE,sBAAsB,CAAC;AAC7E;AAEAnB,aAAaoB,EAAE,CAAC,SAAS;IACvBjB,YAAYkB,KAAKC,GAAG;IACpBC,QAAQC,GAAG,CAAC,CAAC,oBAAoB,EAAErB,UAAU,CAAC;AAChD;AACAH,aAAaoB,EAAE,CAAC,SAAS;IACvBhB;AACF;AACAJ,aAAaoB,EAAE,CAAC,WAAW,CAACV;IAC1B,MAAM,EAAEe,IAAI,EAAEC,IAAI,EAAE,GAAGhB;IACvBJ,sBAAsB,CAACmB,KAAK,GAAGnB,sBAAsB,CAACmB,KAAK,GAAGnB,sBAAsB,CAACmB,KAAK,GAAGC,OAAOA;IACpGnB,qBAAqB,CAACkB,KAAK,GAAGlB,qBAAqB,CAACkB,KAAK,GAAGlB,qBAAqB,CAACkB,KAAK,GAAG,IAAI;IAC9F,IAAIjB,YAAY,CAACiB,KAAK,EAAE;QACtBjB,YAAY,CAACiB,KAAK,CAACE,IAAI,CAACD;IAC1B,OACElB,YAAY,CAACiB,KAAK,GAAG;QAACC;KAAK;IAC7BrB;AAEF;AACAL,aAAaoB,EAAE,CAAC,OAAO;IACrBG,QAAQC,GAAG,CAAC,CAAC,6BAA6B,EAAEH,KAAKC,GAAG,KAAKnB,UAAU,CAAC;IACpEW,QAAQc,IAAI,CAAC;AACf;AAEA5B,aAAaoB,EAAE,CAAC,OAAO;IACrBG,QAAQC,GAAG,CAAC;IACZD,QAAQC,GAAG,CAAC,CAAC,mBAAmB,EAAEpB,WAAW,CAAC;IAC9CmB,QAAQC,GAAG,CAAC,CAAC,qBAAqB,EAAEnB,aAAa,CAAC;IAClDkB,QAAQC,GAAG,CAAC,CAAC,wBAAwB,CAAC;IACtCK,OAAOC,IAAI,CAACxB,wBAAwByB,OAAO,CAAC,CAACC;QACzCT,QAAQC,GAAG,CAAC,CAAC,EAAEQ,IAAI,EAAE,EAAE1B,sBAAsB,CAAC0B,IAAI,GAAGzB,qBAAqB,CAACyB,IAAI,CAAC,CAAC;IACnF;IAEFH,OAAOC,IAAI,CAACf,aAAagB,OAAO,CAAC,CAACC;QAChCT,QAAQC,GAAG,CAAC,CAAC,EAAEQ,IAAI,EAAE,EAAEjB,WAAW,CAACiB,IAAI,CAAC,CAAC;IAC3C;IACAT,QAAQC,GAAG,CAAC;AACd;AAEAxB,aAAaoB,EAAE,CAAC,gBAAgB;IAC9BhB,aAAa;IACbC,eAAe;IACfC,yBAAyB,CAAC;IAC1BC,wBAAwB,CAAC;IACzBC,eAAe,CAAC;IAChBe,QAAQC,GAAG,CAAC;IACZD,QAAQC,GAAG,CAAC;AAEd"}